// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*! 
 * @file AMM_StandardPubSubTypes.h
 * This header file contains the declaration of the serialization functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#ifndef _AMM_AMM_STANDARD_PUBSUBTYPES_H_
#define _AMM_AMM_STANDARD_PUBSUBTYPES_H_

#include <fastrtps/config.h>
#include <fastrtps/TopicDataType.h>

#include "AMM_Standard.h"

#if !defined(GEN_API_VER) || (GEN_API_VER != 1)
#error Generated AMM_Standard is not compatible with current installed Fast-RTPS. Please, regenerate it with fastrtpsgen.
#endif

namespace AMM
{
    /*!
     * @brief This class represents the TopicDataType of the type FMA_Location defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class FMA_LocationPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef FMA_Location type;

    	FMA_LocationPubSubType();
    	virtual ~FMA_LocationPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type UUID defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class UUIDPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef UUID type;

    	UUIDPubSubType();
    	virtual ~UUIDPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };

    /*!
     * @brief This class represents the TopicDataType of the type Assessment defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class AssessmentPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef Assessment type;

    	AssessmentPubSubType();
    	virtual ~AssessmentPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };

    /*!
     * @brief This class represents the TopicDataType of the type EventFragment defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class EventFragmentPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef EventFragment type;

    	EventFragmentPubSubType();
    	virtual ~EventFragmentPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type EventRecord defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class EventRecordPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef EventRecord type;

    	EventRecordPubSubType();
    	virtual ~EventRecordPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };

    /*!
     * @brief This class represents the TopicDataType of the type FragmentAmendmentRequest defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class FragmentAmendmentRequestPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef FragmentAmendmentRequest type;

    	FragmentAmendmentRequestPubSubType();
    	virtual ~FragmentAmendmentRequestPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };

    /*!
     * @brief This class represents the TopicDataType of the type Log defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class LogPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef Log type;

    	LogPubSubType();
    	virtual ~LogPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type ModuleConfiguration defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class ModuleConfigurationPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef ModuleConfiguration type;

    	ModuleConfigurationPubSubType();
    	virtual ~ModuleConfigurationPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type OmittedEvent defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class OmittedEventPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef OmittedEvent type;

    	OmittedEventPubSubType();
    	virtual ~OmittedEventPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type Semantic_Version defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class Semantic_VersionPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef Semantic_Version type;

    	Semantic_VersionPubSubType();
    	virtual ~Semantic_VersionPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type OperationalDescription defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class OperationalDescriptionPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef OperationalDescription type;

    	OperationalDescriptionPubSubType();
    	virtual ~OperationalDescriptionPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type PhysiologyModification defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class PhysiologyModificationPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef PhysiologyModification type;

    	PhysiologyModificationPubSubType();
    	virtual ~PhysiologyModificationPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type PhysiologyValue defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class PhysiologyValuePubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef PhysiologyValue type;

    	PhysiologyValuePubSubType();
    	virtual ~PhysiologyValuePubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type PhysiologyWaveform defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class PhysiologyWaveformPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef PhysiologyWaveform type;

    	PhysiologyWaveformPubSubType();
    	virtual ~PhysiologyWaveformPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type RenderModification defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class RenderModificationPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef RenderModification type;

    	RenderModificationPubSubType();
    	virtual ~RenderModificationPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };

    /*!
     * @brief This class represents the TopicDataType of the type SimulationControl defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class SimulationControlPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef SimulationControl type;

    	SimulationControlPubSubType();
    	virtual ~SimulationControlPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };

    /*!
     * @brief This class represents the TopicDataType of the type Status defined by the user in the IDL file.
     * @ingroup AMM_STANDARD
     */
    class StatusPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
            typedef Status type;

    	StatusPubSubType();
    	virtual ~StatusPubSubType();
    	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
    		bool force_md5 = false) override;
    	virtual void* createData() override;
    	virtual void deleteData(void * data) override;
    	MD5 m_md5;
    	unsigned char* m_keyBuffer;
    };
}

#endif // _AMM_AMM_STANDARD_PUBSUBTYPES_H_